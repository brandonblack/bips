Reroot




Rough sketch:
Define hash-to-curve (Hc), using IETF's constant time method

SegWit v1 rules apply for removing annex

Define H = SHA256(uncompressedDER(SECP256K1_GENERATOR_POINT))

Define SIGHASH_GRAFT which takes a Taproot (parity || pubkey) from the stack as the message, instead of the transaction

Key Path validation, params: q, G?, stack:
  s = pop
  s must be a valid signature for q (respecting SIGHASH flags, using the value hash<sub>Graftroot</sub>(G) as the message for SIGHASH_GRAFT)
    Note: q may be a bare pubkey, or a taproot tweaked pubkey, requiring a tweaked secret key

G'Root validation, params: q, C, G?, stack:
  script = pop
  p = q - Hc(script)
  if p != H
    run Key Path validation(p, G, stack)
  run Tapscript(C, script, stack)

Reroot (SegWit v2), params: q, stack, qp?:
  Change calculation of Taptweak to use Hc
  If len(stack) = 1
    push q
    push empty
  C = pop
  If len(C) = 0
    qi = pop
    run Key Path validation(qi, qp, stack)
  Else if len(C) = 1
    qi = pop
    run G'Root validation(qi, C, qp, stack)
    run OP_VERIFY
  Else
    script_version = C[0] & 0xfe
    if script_version != 0xc2
      script = pop
      qi = run Taptree root(C, script)
      run Tapscript(C, script, stack)
      run OP_VERIFY
    else
      top = peak
      if top != NULL AND len(top) != 0 // Graftroot
        qo = pop
        s = pop
        top_but_1 = peak
        push s
        if top_but_1 = NULL OR len(top_but_1) = 0
          run Key Path validation(qo, qp, stack)
        else
          run G'Root validation(qo, qp, stack)
          run OP_VERIFY
        qp = qo
      qi = run Taptree root(C, qp)
  top = pop
  if top != NULL AND len(top) != 0
    fail
  if top == NULL
    if q != x(qi)
      fail
    if len(C) > 0 && C & 0x01 != parity(qi)
      fail
    push OP_TRUE
    return
  run Reroot(q, stack, qi)
